stages:
  - build
  - push
  - deploy

build:
  stage: build
  image: 
    name: $CI_REGISTRY/telecomproject/cluster/docker:latest
  services:
    - docker:19-dind
  before_script:
    - aws ecr create-repository --repository-name $CI_PROJECT_NAME --region $AWS_DEFAULT_REGION >> /dev/null || true #pushAWS
    - export AWS_REGISTRY=`aws ecr describe-repositories --repository-names $CI_PROJECT_NAME --query repositories[].repositoryUri --output text` #pushAWS
    - aws ecr get-login-password | docker login -u AWS --password-stdin $AWS_REGISTRY #pushAWS
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY #pushGL
  script:
    - docker pull $AWS_REGISTRY:latest || true #pull if exist
    - docker image tag $AWS_REGISTRY:latest $AWS_REGISTRY:$CI_COMMIT_BEFORE_SHA || true #tag latest if exist
    - docker build -t $AWS_REGISTRY:latest . #build
    - docker pull $CI_REGISTRY_IMAGE:latest || true # pull latest i exist
    - docker image tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA || true #tag latest if exist
    - docker image tag $AWS_REGISTRY:latest $CI_REGISTRY_IMAGE:latest #pushAWS
    - docker images
    - docker push $AWS_REGISTRY:$CI_COMMIT_BEFORE_SHA || true #pushAWS-versions
    - docker push $AWS_REGISTRY:latest #pushAWS-latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA || true #pushGL-versions
    - docker push $CI_REGISTRY_IMAGE:latest #pushGL-latest

