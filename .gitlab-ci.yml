stages:
  - build
  - deploy

variables:
  CI_GROUP_NAME: telecomproject
  AWS_DEFAULT_REGION: eu-west-1
  AWS_ACCESS_KEY_ID: AKIAUNC467SMOH2XM5NF
  AWS_SECRET_ACCESS_KEY: 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

build:
  stage: build
  image: 
    name: docker:latest
  services:
    - docker:19-dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
    - mv /tmp/eksctl /usr/local/bin
    - aws ecr describe-repositories --repository-names $CI_GROUP_NAME >> /dev/null || aws ecr create-repository --repository-name $CI_GROUP_NAME --region $AWS_DEFAULT_REGION
    - aws ecr describe-repositories --repository-names $CI_GROUP_NAME
  # - export DOCKER_REGISTRY=`aws ecr describe-repositories --repository-names $CI_GROUP_NAME | grep "repositoryUri" | awk -F ":\ " '{print $2}' | awk '{ print substr( $0, 1, length($0) -1 ) }' | awk '{print substr($0, 2, length($0) - 2)}'` 
    - export DOCKER_REGISTRY=`aws ecr describe-repositories --repository-names telecomproject | jq -r .repositories[].repositoryUri`
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
  script:
    - docker build -t $DOCKER_REGISTRY:$CI_PROJECT_NAME .
    - docker push $DOCKER_REGISTRY:$CI_PROJECT_NAME
    # Describe eks cluster with name telecomproject
    # Check if exist telecomproject. If no create
    #- if [ $? -ne 0 ]; then eksctl create cluster -f create_cluster.yaml; else echo "Cluster telecomproject exist" fi
   # - aws eks describe-cluster --name telecomproject 
    #- echo $?