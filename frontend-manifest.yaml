---
apiVersion: apps/v1
kind: Deployment
metadata:
<<<<<<< HEAD
  namespace: prod
=======
  namespace: telecom-project
>>>>>>> f1a8929758c763d7642ac5bd1528e811e482b84c
  name: frontend
  labels:
    app: frontend
    project: telecom-project
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: front
  template:
    metadata:
      labels:
        app: frontend
        app.kubernetes.io/name: front
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      containers:
        - name: frontend-container
          image: 302990163096.dkr.ecr.eu-west-1.amazonaws.com/frontend:latest
          ports:
          - containerPort: 8080
            name: rpc
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:80"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:80"
          - name: CART_SERVICE_ADDR
            value: "cartservice:80"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendationservice:80"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:80"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkoutservice:80"
          - name: AD_SERVICE_ADDR
            value: "adservice:80"
          # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem, alibaba
          # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp 
          - name: ENV_PLATFORM 
            value: "aws"
          - name: DISABLE_TRACING
            value: "true"
          - name: DISABLE_PROFILER
            value: "true"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          # - name: CYMBAL_BRANDING
          #   value: "true"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

--- 

apiVersion: v1
kind: Service
metadata:
<<<<<<< HEAD
  namespace: prod
=======
  namespace: telecom-project
>>>>>>> f1a8929758c763d7642ac5bd1528e811e482b84c
  name: frontend
  labels:
    app: frontend
    project: telecom-project
spec:
  ports:
  - name: rpc
    port: 80
    targetPort: rpc
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  namespace: prod
  name: frontend-external
spec:
  ports:
  - name: rpc
    port: 80
<<<<<<< HEAD
    targetPort: rpc 
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   namespace: prod
#   name: ingress-telecom
#   labels:
#     app: frontend
#     project: telecom-project
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
# spec:
#   rules:
#     - http:
#         paths:
#           - path: /*
#             backend:
#               serviceName: frontend
#               servicePort: 80
=======
    targetPort: 8080
  type: ClusterIP
  
    

 
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: telecom-project
  name: ingress-telecom
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: frontend
              servicePort: 80
>>>>>>> f1a8929758c763d7642ac5bd1528e811e482b84c

              
